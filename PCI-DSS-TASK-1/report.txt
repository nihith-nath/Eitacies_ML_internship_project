I have completed the task of developing a PCI-DSS (Payment Card Industry Data Security Standard) detection system using a textual dataset. The project began with loading and understanding the dataset, which contained messages labeled to indicate whether they comply with PCI-DSS. I performed an initial exploration of the data, checking for missing values and analyzing the distribution of the labels.

For data preprocessing, I standardized and cleaned the textual data by converting text to lowercase, removing punctuation, tokenizing, and eliminating stop words. I also created a new feature contains_number to capture the presence of numeric characters in the messages. These preprocessing steps were essential to enhance the data quality and improve model performance.

Next, I utilized TF-IDF to transform the text data into numerical features, capturing the importance of words based on their frequency. I combined these features with the contains_number variable to form the final dataset. I then split the data into training and testing sets and trained two models: Logistic Regression and Decision Tree Classifier. Both models were evaluated for their performance, and metrics such as accuracy, confusion matrix, and classification report were generated.

To make the system user-friendly, I implemented a function to predict PCI-DSS compliance for custom input messages. This function preprocesses the input text, extracts features, and uses the trained Decision Tree model to make predictions. The results, including classification reports and predictions, were saved to a JSON file.

Finally, I ensured that the output could be easily stored and accessed by creating a function to load the JSON data into a MongoDB collection. This step enables efficient storage and retrieval of results for further analysis or reporting. Overall, the project involved model deployment, tuning to reduce bias, feature engineering, and integration with a database to provide a comprehensive solution for PCI-DSS compliance detection.
